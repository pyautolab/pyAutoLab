name: tests
on:
  pull_request:
  push:
    branches: [main]

defaults:
  run:
    shell: bash

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get Poetry home path
        id: poetry-home
        run: |
          if [ ${{ runner.os }} == "ubuntu-latest" ]; then
            path="C:/Users/runneradmin/AppData/Roaming/Python/Scripts"
          else
            path="$HOME/.local/"
          fi
          echo ::set-output name=path::$path

      - name: Get full Python version
        id: full-py-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Cache ${{ steps.poetry-home.outputs.path }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.poetry-home.outputs.path }}
          key: poetry-${{ runner.os }}-${{ steps.full-py-version.outputs.version }}

      - name: Cache ./.venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: poetry-${{ runner.os }}-${{ steps.full-py-version.outputs.version }}

      - uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
        env:
          POETRY_HOME: ${{ steps.poetry-home.outputs.path }}

      - name: Install dependencies
        run: |
          poetry install
          poetry run pip install -U pyqt6

      - name: "Install Linux dependencies"
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install --no-install-recommends -y libxkbcommon-x11-0 libopengl0 libyaml-dev libegl1-mesa libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0

      - name: Run pytest
        shell: bash
        run: poetry run pytest -v tests
